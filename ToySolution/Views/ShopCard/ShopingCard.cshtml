@model IndexViewModels

@section addcss{ 
<style>
    .shp th {
        color: white;
        background-color: #a5c926;
        
        font-family: cursive;
    }
    .prt td {
        font-family: cursive;
    }
</style>
}

<div style="margin-top:10%" class="col-3 val">
    <span style="        background-color: #a5c926;
        color: white;
        border-radius: 8%;
        margin-left: 158px;
        font-family: cursive;
">Subtotal:</span>


    <span style=" margin-left: 2%;color:black;font-family:cursive;" class="basketCount"></span>
</div>

<table style="        margin-top: 1%;
        width: 75%;
        margin-left: 10%;
" class="table">
    <thead>
        <tr class="shp">
            <th class="product-image">
                Image

            </th>
            <th class="product-details">
                Name
            </th>
            <th class="product-price">
                Price
            </th>


            <th class="product-quantity">
                Quality
            </th>


            <th class="product-line-price">
                Total
            </th>
            <th>

            </th>

        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model.BasketItems)
            {
                <tr data-producid="@item.ProductId" class="product prt">
                    <td class="product-image">
                        <img style="width:60px" src="~/uploads/images/@item.ImagePath" />
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td class="product-price">
                        @item.Price$
                    </td>
                    <td class="product-quantity">
                        <input style=" width: 58px;
        border-radius: 11px
" min="1" value="@item.Count" type="number" />
                    </td>

                    <td class="product-line-price">
                        @item.Amount$

                    </td>
                    <td class="product-removal">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                            <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                        </svg>
                    </td>





                </tr>
            }
        }




    </tbody>

</table>

@section addjs{

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>

    <script>







        var taxRate = 0.05;
        var shippingRate = 15.00;
        var fadeTime = 300;


        /* Assign actions */
        $('.product-quantity input').change(function (tr) {


            updateQuantity(this);
            let arr = [];

            var storedJson = $.cookie('basket');

            if (storedJson != undefined && typeof storedJson == 'string') {
                arr = JSON.parse(storedJson)

            }
            let productId = $(tr).data("productid");

            var found = arr.filter(item => {

                return item.productId == item.productId;  //eger eyni id li product varsa sayi artirsin


            })[0];

            if (found == undefined) {
                found = {
                    productId: productId,
                    count: 1

                };
                arr.push(found)
            }
            else {
                found.count = found.count + 1;
            }





            var jsonStrinfy = JSON.stringify(arr);



            $.cookie('basket', jsonStrinfy, { expires: 7, path: '/' }); //cocie yaradrq




        });

        //sebetde silmek

        $('.product-removal svg').click(function (e) {

            e.preventDefault();

            let productId = $(e.currentTarget).closest('tr').data('producid');
            $(e.currentTarget).closest('tr').remove();
            recalculateCart()

            //start: basket remove item

            let arr = [];
            var storedJson = $.cookie('basket');

            if (storedJson != undefined && typeof storedJson == 'string') {
                arr = JSON.parse(storedJson);
            }

            arr = arr.filter(item => item.productId != productId);
            var jsonStrinfy = JSON.stringify(arr);

            $.cookie('basket', jsonStrinfy, { expires: 7, path: '/' });
            //end: basket remove item
            showBasketCount()
        });



        /* Recalculate cart */
        function recalculateCart() {
            var subtotal = 0;

            /* Sum up row totals */
            $('.product').each(function () {
                subtotal += parseFloat($(this).children('.product-line-price').text());
            });

            /* Calculate totals */
            var tax = subtotal * taxRate;
            var shipping = (subtotal > 0 ? shippingRate : 0);
            var total = subtotal + tax + shipping;

            /* Update totals display */
            $('.totals-value').fadeOut(fadeTime, function () {

                $('#cart-subtotal').html(`${subtotal.toFixed(2)}$`);


                $('.totals-value').fadeIn(fadeTime);
            });
            showBasketCount()
        }


        /* Update quantity */
        function updateQuantity(quantityInput) {
            /* Calculate line price */
            var productRow = $(quantityInput).parent().parent();
            var price = parseFloat(productRow.children('.product-price').text());
            var quantity = $(quantityInput).val();
            var linePrice = price * quantity;


            /* Update line price display and recalc cart totals */
            productRow.children('.product-line-price').each(function () {

                $(this).fadeOut(fadeTime, function () {
                    //start: basket change data

                    showBasketCount()

                    $(this).text(`${linePrice.toFixed(2)}$`);

                    recalculateCart();
                    $(this).fadeIn(fadeTime);

                });





            });
            //start: basket change data

            showBasketCount()
        }




    </script>
}
